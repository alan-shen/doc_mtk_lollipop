=============================================================================================================
CONFIG
+++++++

 config/sumo/ProjectConfig.mk                                   |	宏定义 CUSTOM_KERNEL_XXX 的值表示了对应 sensor 对应驱动的目录名...
																|
																|	在 "mediatek/platform/mt6595/kernel/core/mt_devs.c" 中进行 设备注册.. 
																|
																|	CUSTOM_KERNEL_ACCELEROMETER = lsm330
																|	CUSTOM_KERNEL_GYROSCOPE     = l3gd20
																|	CUSTOM_KERNEL_MAGNETOMETER  = akm09911
																|	CUSTOM_KERNEL_ALSPS         = tmg399x
																|	CUSTOM_KERNEL_HALLSENSOR    = hall_sensor

=============================================================================================================
DRIVER:
+++++++

------
ACC:

 custom/common/kernel/accelerometer/lsm330/cust_acc.c           |	平台相关信息,i2c bus/power等!
 custom/common/kernel/accelerometer/lsm330/lsm330.c             |	在 init 中调用 i2c_register_board_info() 注册设备, board_info(i2c-addr) 在驱动中, 汗颜!!!
 custom/common/kernel/accelerometer/lsm330/lsm330.h             |	设备 "gsensor" 的 driver

-----------
ALSPS(Ges):

 custom/common/kernel/alsps/tmg399x/cust_alsps.c                |	
 custom/common/kernel/alsps/inc/cust_alsps.h                    |
 custom/common/kernel/alsps/tmg399x/gesture.h                   |
 custom/common/kernel/alsps/tmg399x/tmg399x.c                   |	设备 "als_ps" 的 driver
 custom/common/kernel/alsps/tmg399x/tmg399x.h                   |
 custom/common/kernel/alsps/tmg399x/tmg399x_gesture_algorithm.c |

------
GYRO:

 custom/sumo/kernel/gyroscope/l3gd20/cust_gyro.c                |
 custom/common/kernel/gyroscope/l3gd20/l3gd20.c                 |	设备 "gyroscope" 的 driver
 custom/common/kernel/gyroscope/l3gd20/l3gd20.h                 |

------
MAG:

 custom/sumo/kernel/magnetometer/akm09911/cust_mag.c            |
 custom/common/kernel/magnetometer/akm09911/akm09911.c          |	设备 "msensor" 的 driver
 custom/common/kernel/magnetometer/akm09911/akm09911.h          |

------
HALL:

 custom/sumo/kernel/hallsensor/hall_sensor/hall_sensro.c        |	设备 "hall_gpio" 的 driver

------
Other:

 kernel/drivers/hwmon/hwmsen/hwmsen_dev.c                       |	通用 sensor driver 接口??? ("hwmsensor"的 driver)
 kernel/include/linux/hwmsensor.h                               |	
 platform/mt6595/kernel/core/mt_devs.c                          |	在函数 mt_board_init() 中进行设备注册

=============================================================================================================
HAL Layer:
++++++++++

 hardware/sensor/Hwmsen.cpp                                     |	
 hardware/sensor/Hwmsen.h                                       |	
 hardware/sensor/hwmsen_chip_info.c                             |	
 hardware/sensor/hwmsen_chip_info.h                             |	

=============================================================================================================
INIT RC:
++++++++

 config/sumo/init.rc                                            |

=============================================================================================================
=                                                                                                           =
=    KERNEL: SENSOR: Bring up l/p/acc/gyro/ecompass.                                                        =
=    patch from pre-2 of CEI for this issue.                                                                =
=    Ticket: MTKMOBILE-201                                                                                  =
=                                                                                                           =
=============================================================================================================

=======================================
 platform/mt6595/kernel/core/mt_devs.c
=======================================

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CUSTOM SENSOR<<<<<
struct platform_device sensor_gsensor = {
    .name          = "gsensor",
    .id            = -1,
};

struct platform_device sensor_msensor = {
    .name          = "msensor",
    .id            = -1,
};

struct platform_device sensor_orientation = {
    .name          = "orientation",
    .id            = -1,
};

struct platform_device sensor_alsps = {
    .name          = "als_ps",
    .id            = -1,
};

struct platform_device sensor_gyroscope = {
    .name          = "gyroscope",
    .id            = -1,
};

struct platform_device sensor_barometer = {
    .name          = "barometer",
    .id            = -1,
};
struct platform_device sensor_temperature = {
    .name          = "temperature",
    .id            = -1,
};

struct platform_device sensor_batch = {
    .name          = "batchsensor",
    .id            = -1,
};

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

/* hwmon sensor */
struct platform_device hwmon_sensor = {
    .name          = "hwmsensor",
    .id            = -1,
};

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MTK SENSOR??<<<<<

struct platform_device acc_sensor = {
    .name          = "m_acc_pl",
    .id            = -1,
};
struct platform_device mag_sensor = {
    .name          = "m_mag_pl",
    .id            = -1,
};

struct platform_device alsps_sensor = {
    .name          = "m_alsps_pl",
    .id            = -1,
};

struct platform_device gyro_sensor = {
    .name          = "m_gyro_pl",
    .id            = -1,
};

struct platform_device barometer_sensor = {
    .name          = "m_baro_pl",
    .id            = -1,
};

struct platform_device temp_sensor = {
    .name          = "m_temp_pl",
    .id            = -1,
};

struct platform_device batch_sensor = {
    .name          = "m_batch_pl",
    .id            = -1,
};
========================================================================================================

				=======
				CUSTGEN
				=======

==========
HAL Layer:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 mediatek/hardware/sensor/sensors.c				|
 mediatek/hardware/sensor/SensorBase.cpp		|
 mediatek/hardware/sensor/Hwmsen.cpp			|	<<<<<<<  读取 hwmsensor 设备节点的文件!!!!  以及操作的接口(ioctl)
 mediatek/hardware/sensor/hwmsen_chip_info.c	|	<<<<<<<  定义了板子上所有 sensor 列表!!              "sSensorList"
												|---------------------------------------------------------------------
												|
												|	struct sensors_poll_device_t {
												|		struct hw_device_t common;
												|		int (*activate)(struct sensors_poll_device_t *dev, int handle, int enabled);
												|		int (*setDelay)(struct sensors_poll_device_t *dev, int handle, int64_t ns);
												|		int     (*poll)(struct sensors_poll_device_t *dev, sensors_event_t* data, int count);
												|	};
												|
												|	/* 包含 Sensor 操作方法的结构体 */
												|	struct sensors_data_context_t {
												|		struct sensors_poll_device_t device;
												|		int events_fd;
												|		int device_io_fd;
												|		uint32_t active_sensors;
												|		sensors_event_t sensors[MAX_ANDROID_SENSOR_NUM];
												|		uint32_t pendingSensors;
												|		int  (*activate)(struct sensors_data_context_t *dev,int handle, int enabled);
												|		int (*set_delay)(struct sensors_data_context_t *dev, int handle, int64_t ns);
												|		int      (*poll)(struct sensors_data_context_t *dev, sensors_event_t* values, int count);
												|	};
												|
												|---------------------------------------------------------------------
												|
												|static int open_sensors(const struct hw_module_t* module, const char* name, struct hw_device_t** device)
												|{
												|	... ...
												|	struct sensors_data_context_t *dev;
												|	... ...															 /****** 通过 sensor_operate 来操作 hwmsensor *****/
												|	... ...													+--------HWM_IO_ENABLE_SENSOR_NODATA/HWM_IO_DISABLE_SENSOR_NODATA
												|	dev->activate =  hwm__activate;			<------------------------HWM_IO_ENABLE_SENSOR/HWM_IO_DISABLE_SENSOR
												|	dev->set_delay = hwm__set_delay;		<------------------------HWM_IO_SET_DELAY
												|	dev->poll = hwm__poll;			<--------------------------------HWM_IO_GET_SENSORS_DATA
												|	... ...															 /****** 通过 sensor_operate 来操作 hwmsensor *****/
    											|
												|	dev->device.common.tag = HARDWARE_DEVICE_TAG;
												|	dev->device.common.version  = 0;
												|	dev->device.common.module   = (struct hw_module_t*)module;
												|	dev->device.common.close    = data__close;
												|	dev->device.activate        = control__activate;   <-------------
												|	dev->device.setDelay        = control__setDelay;   <-------------
												|	dev->device.poll            = data__poll;   <--------------------
												|	... ...
												|}
												|
												|---------------------------------------------------------------------
												|
												|	static struct hw_module_methods_t sensors_module_methods = {
												|		.open = open_sensors
												|	};
												|
												|	/* 注册到 HAL 层必须的结构体 */
												|	struct sensors_module_t HAL_MODULE_INFO_SYM = {
												|		.common = {
												|			.tag           = HARDWARE_MODULE_TAG,
												|			.version_major = 1,
												|			.version_minor = 0,
												|			.id            = SENSORS_HARDWARE_MODULE_ID,
												|			.name          = "MTK SENSORS Module",
												|			.author        = "The Android Open Source Project",
												|			.methods       = &sensors_module_methods,
												|		},
												|		.get_sensors_list = sensors__get_sensors_list,		<----------可以获取板子上支持的sensor列表 "sSensorList"
												|	};
												|
												|---------------------------------------------------------------------
 mediatek/hardware/sensor/nusensors.cpp			|
 mediatek/hardware/sensor/sensordebug.cpp		|
 mediatek/hardware/sensor/InputEventReader.cpp	|
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 mediatek/hardware/sensor/Acceleration.cpp		|
 mediatek/hardware/sensor/Magnetic.cpp			|
 mediatek/hardware/sensor/Gyroscope.cpp			|
 mediatek/hardware/sensor/AmbienteLight.cpp		|
 mediatek/hardware/sensor/Proximity.cpp			|
 mediatek/hardware/sensor/Pressure.cpp			|
 mediatek/hardware/sensor/Temprature.cpp		|
 mediatek/hardware/sensor/BatchSensor.cpp		|
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

======
Board:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 mediatek/platform/mt6595/kernel/core/mt_devs.c										|	在函数 mt_board_init() 中进行设备注册
																					|	
																					|	会注册默认设备:
																					|	m_acc_pl	(MTK_SENSOR_SUPPORT)
																					|	m_mag_pl	(MTK_SENSOR_SUPPORT)
																					|	m_alsps_pl	(MTK_SENSOR_SUPPORT)
																					|	m_gyro_pl	(MTK_SENSOR_SUPPORT)
																					|
																					|	会注册客户设备:
																					|	gsensor		(CUSTOM_KERNEL_ACCELEROMETER)
																					|	msensor		(CUSTOM_KERNEL_MAGNETOMETER)
																					|	als_ps		(CUSTOM_KERNEL_ALSPS)
																					|	gyroscope	(CUSTOM_KERNEL_GYROSCOPE)
																					|	hall_gpio	(CUSTOM_KERNEL_HALLSENSOR)
																					|
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

=======================
HWMSensor(Sensor Core):

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 mediatek/kernel/include/linux/hwmsensor.h											|	
 mediatek/kernel/drivers/hwmon/hwmsen/hwmsen_dev.c									|	通用 sensor driver 接口?? ("hwmsensor"的 driver); Probe 时注册 input 设备
 mediatek/kernel/drivers/hwmon/hwmsen/hwmsen_helper.c								|	
																					|
																					|	hwmsen_get_convert()		根据 direction 获取转换表
																					|	hwmsen_attach(sensor,obj)	将 obj 注册到 mcxt->cxt[sensor]->obj
																					|	hwmsen_detach(sensor)
																					|
																					|	struct hwmsen_object {
																					|	    void *self;
																					|	    int polling;
																					|	    int (*sensor_operate)(void* self, uint32_t command, void* buff_in, int size_in,
																					|	        void* buff_out, int size_out, int* actualout);
																					|	};
																					|
																					|	int gsensor_operate(void* self, uint32_t command, void* buff_in, int size_in,
																					|	        void* buff_out, int size_out, int* actualout)
																					|
																					|	CMD_1 - SENSOR_DELAY
																					|	CMD_2 - SENSOR_ENABLE
																					|	CMD_3 - SENSOR_GET_DATA

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

======
ACC:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/inc/cust_acc.h		|
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/cust_acc.c			|	平台相关信息,i2c bus/power等!
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/lsm330.h			|
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/lsm330.c			|	设备"gsensor"的 driver; 在 init 中调用 i2c_register_board_info() 设置设备
																					|	端口信息,注册i2c设备, board_info(i2c-addr) 在驱动中, 汗颜!!!
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/accel.h			|
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/accelerometer/accel.c			|	设备 "m_acc_pl" 的 driver
																					|	由于没有驱动调用 acc_driver_add() 注册驱动到变量 gsensor_init_list[] 中,
																					|	所以在 acc_probe() 时会失败!!
																					|	Probe 成功的话会注册 input 设备
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

======
GYRO:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/inc/cust_gyro.h		|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/cust_gyro.c			|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/l3gd20.h				|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/l3gd20.c				|	设备 "gyroscope" 的 driver
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/gyroscope.h			|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/gyroscope/gyroscope.c			|	设备 "m_gyro_pl" 的 driver
																					|	由于没有驱动调用 gyro_driver_add() 注册驱动到变量 gyroscope_init_list[] 中,
																					|	所以在 gyro_probe() 时会失败!!
																					|	Probe 成功的话会注册 input 设备
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

======
MAG:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/inc/cust_mag.h		|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/cust_mag.c			|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/akm09911.h			|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/akm09911.c			|	设备 "msensor" 的 driver; 数据有 daemon 程序保存的!!!
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/mag.h				|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/magnetometer/mag.c				|	设备 "m_mag_pl" 的 driver
																					|	由于没有驱动调用 mag_driver_add() 注册驱动到变量 msensor_init_list[] 中,
																					|	所以在 mag_probe() 时会失败!!
																					|	Probe 成功的话会注册 input 设备
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

===========
ALSPS(Ges):

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/inc/cust_alsps.h			|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/cust_alsps.c				|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/gesture.h					|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/tmg399x.h					|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/tmg399x.c					|	设备 "als_ps" 的 driver
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/tmg399x_gesture_algorithm.c|	
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/alsps.h					|	
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/alsps/alsps.c					|	设备 "m_alsps_pl" 的 driver
																					|	由于没有驱动调用 alsps_driver_add() 注册驱动到变量 alsps_init_list[] 中,
																					|	所以在 alsps_probe() 时会失败!!
																					|	Probe 成功的话会注册 input 设备
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

======
HALL:

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------
 out/target/product/sumo/obj/CUSTGEN/custom/kernel/hallsensor/hall_sensro.c			|	设备 "hall_gpio" 的 driver
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

========================================================================================================
